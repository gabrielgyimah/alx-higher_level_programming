============================
Using the add-integer module
============================

This module defines the add integer function ``add_integer(a, b=89)``

The function returns the result of adding two integers 

>>> add_integer = __import__("0-add_integer").add_integer

Let's test

[::]

>>> add_integer(2, 3)
5

[::]

>>> add_integer(0, 0)
0

[::]
>>> add_integer(2, 4)
6

[::]

>>> add_integer(5, -2)
3

[::]

>>> add_integer(3.3, 2)
5

[::]

>>> add_integer(0, True)
Traceback (most recent call last):
...
TypeError: b must be an integer

[::]

>>> add_integer(True, 0)
Traceback (most recent call last):
...
TypeError: a must be an integer

[::]

>>> add_integer(1.1, 0.2)
1

[::]
>>> add_integer(2, "C is fun")
Traceback (most recent call last):
...
TypeError: b must be an integer

[::]
>>> add_integer("foobity", 3)
Traceback (most recent call last):
...
TypeError: a must be an integer

[::]
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

[::]
>>> add_integer([4, 9], [4, 6])
Traceback (most recent call last):
...
TypeError: a must be an integer

[::]
>>> add_integer(4.5678398465673783E443, 2.9857247896498658659829826)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

[::]
>>> add_integer(4, float("nan"))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

[::]
>>> add_integer(float("inf"), 3)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
